[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ov2ssg"
version = "0.3.8"
description = "Convert Obsidian vault to Static Site Generator posts"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {email = "nodewee@gmail.com"},
]
maintainers = [
    {email = "nodewee@gmail.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Text Processing :: Markup :: Markdown",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["obsidian", "vault", "hugo", "zola", "ssg", "markdown", "converter"]
requires-python = ">=3.9"
dependencies = [
    "python-frontmatter>=1.0.0",
    "python-slugify>=8.0.0",
    "toml>=0.10.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]

[project.scripts]
ov2ssg = "ov2ssg.cli:main"

[project.urls]
Homepage = "https://github.com/nodewee/ov2ssg"
Repository = "https://github.com/nodewee/ov2ssg.git"
Issues = "https://github.com/nodewee/ov2ssg/issues"

[tool.setuptools]
packages = ["ov2ssg"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
skip_glob = [".env/*", "__pycache__/*"]
known_first_party = ["ov2ssg"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.pytest.ini_options]
pythonpath = ["."]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=ov2ssg --cov-report=term-missing --cov-report=html"